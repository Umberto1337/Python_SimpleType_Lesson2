'''Простые объекты - Целые числа'''
# x = int("42")
# y = int(3.1415)
# z = int("hello", base=30) #Где строка заявляется числом 30ричном системе счисления.
# print(x, y, z, sep='\n')

'''Размер объекта с помощью import sys'''
# import sys

# STEP = 2 ** 16
# num = 1
# for _ in range(30):
#     print(sys.getsizeof(num), num)
#     num *= STEP
"Рассмотрим как выгледят числа в различных системах счисления"
# num = 2 ** 16 - 1
# b = bin(num) #В двоичных системах счисления 0b1111111111111111
# o = oct(num) #В 8ричное система счисления числа 0o177777
# h = hex(num) #В 16ричное система счисления 0xffff в данном случае f это число
# print(b, o, h)

'''Вещественные числа float'''
# print(0.1 + 0.2) # 0.30000000000000004 особенность хранения в питоне выдаёт хвостик 00004
# pi = 3.141_592_653_589_793_238_462_643_383_279_502_884_197_169_399_375
# print(pi) # 3.141592653589793 - в этом случае обрезает и для сохраненме памяти за ненадобности.

'''Логические типы bool = True False'''
## Пример 1
# DEFAULT = 42 # Канстанта дефолтная
# num = int(input("Введите уровень или ноль для значения по умолчанию: "))
# level = num or DEFAULT
# print(level) # При вводе 80 будет True если 0 то будет False
## Пример 2
# name = input('Как вас зовут? ')
# if name:
#     print('Привет, ' + name) # Если ввожу имя то True
# else:
#     print('Анонимус, приветствую') # Если не ввожу имя то False
## Пример 3 работа с коллекциями заполненная будет True, пустая False
# data = [0, 1, 1, 2, 3, 5, 8, 13, 21]
# while data: #Есть ли в моём списке элементы
#     print(data.pop()) # то вызываю метод pop который возвращает элемент с конца.
# Программа выдаёт True(пока есть элементы в коллекции), как тока элементы заканчиваются
# Вызывает False, цикл останавливается.